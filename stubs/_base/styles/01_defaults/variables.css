:root {
  /**
   * The color variables are used to define the color palette.
   *
   * The color variables are defined by RGB value. When you want to use a color you need use the `rgb()` function. For example: `rgb(var(--color-black))`.
   *
   * @location variables.colors Colors
   * @color {40 40 40|255 255 255} --color-black | Black
   * @color {255 255 255} --color-white | White
   */
  --color-black: 40 40 40;
  --color-white: 255 255 255;
  --color-gray-300: 209 213 219;
  --color-gray-500: 107 114 128;
  --color-gray-600: 75 85 99;

  /**
   * Space are a set of predefined values that can be used to define the space of an element.
   * When spaces are used there is always a set of two variables you can use the `--space-unit` and `--space-<size>`.
   * The `--space-unit` is the base unit that will be multiplied by the `--space-<size>`. Depending on the context
   * you are using the space `<size>` changes.
   *
   * The predefined space can the be set in a specific context by defining the `--space-<size>` variable.
   * For example the space unit is `1rem` and we are in the padding context, we can use `--space-pt: var(--space-md);` to change the padding
   * top to the medium space.
   *
   * @location variables.spaces Spaces
   * @space {0.35} --space-xxs | Extra extra small
   * @space {0.5} --space-xs | Extra small
   * @space {0.7} --space-sm | Small
   * @space {1} --space-base | Base
   * @space {1.3} --space-md | Medium
   * @space {1.8} --space-lg | Large
   * @space {3.2} --space-xl | Extra large
   * @space {4.8} --space-2xl | 2x extra large
   */
  --space-unit: 1em;
  --space-xxs: 0.35;
  --space-xs: 0.5;
  --space-sm: 0.7;
  --space-base: 1;
  --space-md: 1.3;
  --space-lg: 1.8;
  --space-xl: 3.2;
  --space-2xl: 4.8;

  /**
   *
   * - `--transition-fast`
   * - `--transition-base`
   * - `--transition-slow`
   *
   * @location variables.animation Animation
   */
  --transition-fast: 150ms;
  --transition-base: 250ms;
  --transition-slow: 350ms;

  /**
   * A comprehensive color definition system that establishes a complete visual
   * identity for UI components or sections. Each colorset provides all essential color
   * variables needed for consistent theming across your entire application.
   *
   * Core Colors:
   * - `--font-color` - Primary text color for readable content
   * - `--bg-color` - Main background color for containers and surfaces
   * - `--border-color` - Color for borders, dividers, and outlines
   *
   * Visual Enhancement:
   * - `--shadow-color` - RGB values for drop shadows and depth effects
   * - `--shadow-alpha` - Opacity level for shadow transparency (0.0-1.0)
   *
   * Interactive Elements:
   * - `--accent-color` - Highlight color for UI elements and emphasis
   * - `--accent-font-color` - Text color when displayed on accent backgrounds
   * - `--accent-bg-color` - Background color for accent elements and highlights
   *
   * Hover States:
   * - `--accent-hover-font-color` - Text color for interactive elements on hover
   * - `--accent-hover-bg-color` - Background color for interactive elements on hover
   *
   * Text Selection:
   * - `--selection-color` - Text color when selected by user
   * - `--selection-bg-color` - Background color for selected text
   *
   * Usage: Apply colorsets to create consistent theming across components, enable
   * easy theme switching, and maintain visual harmony throughout your application.
   *
   * @location variables.colorset Colorset
   */
  --font-color: var(--color-black);
  --bg-color: var(--color-white);
  --border-color: var(--color-gray-300);
  --shadow-color: 0 0 0;
  --shadow-alpha: 0.1;
  --accent-color: var(--color-gray-500);
  --accent-font-color: var(--color-white);
  --accent-bg-color: var(--accent-color);
  --accent-hover-font-color: var(--color-white);
  --accent-hover-bg-color: var(--color-gray-600);
  --selection-color: var(--bg-color);
  --selection-bg-color: var(--font-color);
}

/* Respect reduced motion preferences */
@media (prefers-reduced-motion: reduce) {
  :root {
    --transition-fast: 0ms;
    --transition-base: 0ms;
    --transition-slow: 0ms;
  }
}
