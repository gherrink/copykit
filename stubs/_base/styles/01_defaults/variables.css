:root {
  /**
   * The color variables are used to define the color palette.
   *
   * The color variables are defined by RGB value. When you want to use a color you need use the `rgb()` function. For example: `rgb(var(--color-black))`.
   *
   * @location variables.colors Colors
   * @color {40 40 40|255 255 255} --color-black | Black
   * @color {255 255 255} --color-white | White
   */
  --color-black: 40 40 40;
  --color-white: 255 255 255;
  --color-gray-300: 209 213 219;
  --color-gray-500: 107 114 128;
  --color-gray-600: 75 85 99;

  /**
   * Space are a set of predefined values that can be used to define the space of an element.
   * When spaces are used there is always a set of two variables you can use the `--space-unit` and `--space-<size>`.
   * The `--space-unit` is the base unit that will be multiplied by the `--space-<size>`. Depending on the context
   * you are using the space `<size>` changes.
   *
   * The predefined space can the be set in a specific context by defining the `--space-<size>` variable.
   * For example the space unit is `1rem` and we are in the padding context, we can use `--space-pt: var(--space-md);` to change the padding
   * top to the medium space.
   *
   * @location variables.spaces Spaces
   * @space {0.35} --space-xxs | Extra extra small
   * @space {0.5} --space-xs | Extra small
   * @space {0.7} --space-sm | Small
   * @space {1} --space-base | Base
   * @space {1.3} --space-md | Medium
   * @space {1.8} --space-lg | Large
   * @space {3.2} --space-xl | Extra large
   * @space {4.8} --space-2xl | 2x extra large
   */
  --space-unit: 1em;
  --space-xxs: 0.35;
  --space-xs: 0.5;
  --space-sm: 0.7;
  --space-base: 1;
  --space-md: 1.3;
  --space-lg: 1.8;
  --space-xl: 3.2;
  --space-2xl: 4.8;

  /**
   *
   * - `--transition-fast`
   * - `--transition-base`
   * - `--transition-slow`
   *
   * @location variables.animation Animation
   */
  --transition-fast: 150ms;
  --transition-base: 250ms;
  --transition-slow: 350ms;

  /**
   * A comprehensive color definition system that establishes a complete visual
   * identity for UI components or sections. Each colorset provides all essential color
   * variables needed for consistent theming across your entire application.
   *
   * Core Colors:
   * - `--font-color` - Primary text color for readable content
   * - `--bg-color` - Main background color for containers and surfaces
   * - `--border-color` - Color for borders, dividers, and outlines
   *
   * Visual Enhancement:
   * - `--shadow-color` - RGB values for drop shadows and depth effects
   * - `--shadow-alpha` - Opacity level for shadow transparency (0.0-1.0)
   *
   * Interactive Elements:
   * - `--accent-color` - Highlight color for UI elements and emphasis
   * - `--accent-font-color` - Text color when displayed on accent backgrounds
   * - `--accent-bg-color` - Background color for accent elements and highlights
   *
   * Hover States:
   * - `--accent-hover-font-color` - Text color for interactive elements on hover
   * - `--accent-hover-bg-color` - Background color for interactive elements on hover
   *
   * Text Selection:
   * - `--selection-color` - Text color when selected by user
   * - `--selection-bg-color` - Background color for selected text
   *
   * Usage: Apply colorsets to create consistent theming across components, enable
   * easy theme switching, and maintain visual harmony throughout your application.
   *
   * @location variables.colorset Colorset
   */
  --font-color: var(--color-black);
  --bg-color: var(--color-white);
  --border-color: var(--color-gray-300);
  --shadow-color: 0 0 0;
  --shadow-alpha: 0.1;
  --accent-color: var(--color-gray-500);
  --accent-font-color: var(--color-white);
  --accent-bg-color: var(--accent-color);
  --accent-hover-font-color: var(--color-white);
  --accent-hover-bg-color: var(--color-gray-600);
  --selection-color: var(--bg-color);
  --selection-bg-color: var(--font-color);

  /**
   * Set of font families to be used in your project.
   *
   * - `--font-family-base`
   *
   * @location variables.font.weight Font weight
   */
  --font-family-base:
    system-ui, "Segoe UI", roboto, helvetica, arial, sans-serif, "Apple Color Emoji",
    "Segoe UI Emoji", "Segoe UI Symbol";

  /**
   * Font weights are a set of predefined values that can be used to define the weight of a font:
   *
   * - `--font-weight-normal`
   * - `--font-weight-bold`
   *
   * @location variables.font.weight Font weight
   */
  --font-weight-normal: 400;
  --font-weight-bold: 700;

  /**
   * Font sizes are a set of predefined values that can be used to define the size of a font:
   * - `--font-size-sm`
   * - `--font-size-base`
   * - `--font-size-md`
   * - `--font-size-lg`
   * - `--font-size-xl`
   * - `--font-size-2xl`
   *
   * @location variables.font.size Font size
   */
  --font-size-sm: 0.875em;
  --font-size-base: 1em;
  --font-size-md: 1.125em;
  --font-size-lg: 1.25em;
  --font-size-xl: 1.25em;
  --font-size-2xl: 1.5rem;

  /**
   * Line heit variables are a set of variables to switch between different line heights
   *
   * - `--line-height-tight`
   * - `--line-height-base`
   * - `--line-height-relaxed`
   *
   * @location variables.font.size Font size
   */
  --line-height-tight: 1.25;
  --line-height-base: 1.4;
  --line-height-relaxed: 1.6;

  /**
   * - `--font-space-unit` - The spacing unit when using font related spaces (see the spaces documentation for mor details).
   * - `--font-size-html-base` - The font size base used on the html tag need to be a pixel value
   * - `--font-color` - used font color.
   * - `--font-family` - used font family.
   * - `--font-weight` - used font weight.
   * - `--font-size` - used font size.
   * - `--font-line-height` - used font line height.
   *
   * @location variables.font Font
   */
  --font-space-unit: 1em;
  --font-size-html-base: 16px;
  --font-family: var(--font-family-base);
  --font-weight: var(--font-weight-normal);
  --font-size: var(--font-size-base);
  --font-line-height: var(--line-height-base);

  /**
   * Headline variables are used to change the headline
   *
   * - `--headline-space` - space to upper element
   * - `--headline-family`
   * - `--headline-weight`
   * - `--headline-line-height`
   * - `--headline-color`
   * - `--headline-scale`
   *
   * @location variables.headline Headline
   */
  --headline-space: var(--space-base);
  --headline-family: var(--font-family-base);
  --headline-weight: var(--font-weight-bold);
  --headline-line-height: var(--line-height-base);
  --headline-color: inherit;
  --headline-scale: 1;

  /**
   * Variables to change link behavior.
   *
   * - `--headline-space` - space to upper element
   * - `--headline-family`
   * - `--headline-weight`
   * - `--headline-line-height`
   * - `--headline-color`
   * - `--headline-scale`
   *
   * @location variables.headline Headline
   */
  --link-color: inherit;
  --link-decoration: underline;
  --link-hover-color: var(--accent-color);
  --link-hover-decoration: none;
  --link-transition-time: var(--transition-base);
}
