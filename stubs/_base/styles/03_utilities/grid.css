@property --grid-cols {
  inherits: false;
  initial-value: 12;
  syntax: "<number>";
}

@property --grid-col-span {
  inherits: false;
  initial-value: 1;
  syntax: "<number>";
}

@property --grid-col-start {
  inherits: false;
  initial-value: 1;
  syntax: "<number>";
}

@property --grid-col-end {
  inherits: false;
  initial-value: 12;
  syntax: "<number>";
}

@layer utilities {
  /**
   * Base grid utility for creating grid layouts
   *
   * @location utilities.grid Grid
   * @example
   * <div class="grid">
   *   <div class="bg px py">Grid Item 1</div>
   *   <div class="bg px py">Grid Item 2</div>
   * </div>
   */
  .grid {
    display: grid;
  }

  /**
   * Grid with gap spacing between items. Use gap utility to define gaps.
   * Gap size can be customized with gap-xs, gap-sm, gap-base, gap-lg, gap-xl modifiers.
   *
   * @location utilities.grid.gap Grid with Gap
   * @example
   * <div class="grid gap">
   *   <div class="bg px py">Item 1</div>
   *   <div class="bg px py">Item 2</div>
   * </div>
   * <div class="grid gap-xl">
   *   <div class="bg px py">Large gap</div>
   *   <div class="bg px py">Large gap</div>
   * </div>
   */
  .grid.gap,
  .grid[class*=" gap-"] {
    --gap-space: var(--space-base);
    --gap-space-x: var(--gap-space);
    --gap-space-y: var(--gap-space);
    --gap-x: calc(var(--space-unit) * var(--gap-space-x));
    --gap-y: calc(var(--space-unit) * var(--gap-space-y));

    gap: var(--gap-x) var(--gap-y);
  }

  /**
   * Grid with column system. By default has 12 columns (customizable with --grid-cols variable).
   * Use col-span-[1-12] classes to define column spans. Use col-start-[1-12] and col-end-[1-12] 
   * for precise positioning. Note: col-end-3 includes the 3rd column (translates to grid-column-end: 4).
   *
   * @location utilities.grid.cols Grid with Columns
   * @example
   * <div class="grid cols gap">
   *   <div class="bg px py col-span-12">Full width (12 columns)</div>
   *   <div class="bg px py col-span-6">Half width (6 columns)</div>
   *   <div class="bg px py col-span-6">Half width (6 columns)</div>
   *   <div class="bg px py col-span-4">Third (4 columns)</div>
   *   <div class="bg px py col-span-4">Third (4 columns)</div>
   *   <div class="bg px py col-span-4">Third (4 columns)</div>
   *   <div class="bg px py col-start-2 col-span-3">Start at column 2</div>
   *   <div class="bg px py col-start-6 col-end-11">From column 6 to 11</div>
   * </div>
   */
  .grid.cols {
    --grid-cols: 12;
    grid-template-columns: repeat(var(--grid-cols, 12), minmax(0, 1fr));

    > * {
      grid-column: 1 / -1;
    }

    > [class^="col-span-"],
    > [class*=" col-span-"] {
      grid-column: span min(var(--grid-cols), var(--grid-col-span, 1)) / span
        min(var(--grid-cols), var(--grid-col-span, 1));
    }

    > .col-span-1 {
      --grid-col-span: 1;
    }

    > .col-span-2 {
      --grid-col-span: 2;
    }

    > .col-span-3 {
      --grid-col-span: 3;
    }

    > .col-span-4 {
      --grid-col-span: 4;
    }

    > .col-span-5 {
      --grid-col-span: 5;
    }

    > .col-span-6 {
      --grid-col-span: 6;
    }

    > .col-span-7 {
      --grid-col-span: 7;
    }

    > .col-span-8 {
      --grid-col-span: 8;
    }

    > .col-span-9 {
      --grid-col-span: 9;
    }

    > .col-span-10 {
      --grid-col-span: 10;
    }

    > .col-span-11 {
      --grid-col-span: 11;
    }

    > .col-span-12 {
      --grid-col-span: 12;
    }

    > [class^="col-start-"],
    > [class*=" col-start-"] {
      grid-column-start: min(var(--grid-cols), var(--grid-col-start, 1));
    }

    > .col-start-1 {
      --grid-col-start: 1;
    }

    > .col-start-2 {
      --grid-col-start: 2;
    }

    > .col-start-3 {
      --grid-col-start: 3;
    }

    > .col-start-4 {
      --grid-col-start: 4;
    }

    > .col-start-5 {
      --grid-col-start: 5;
    }

    > .col-start-6 {
      --grid-col-start: 6;
    }

    > .col-start-7 {
      --grid-col-start: 7;
    }

    > .col-start-8 {
      --grid-col-start: 8;
    }

    > .col-start-9 {
      --grid-col-start: 9;
    }

    > .col-start-10 {
      --grid-col-start: 10;
    }

    > .col-start-11 {
      --grid-col-start: 11;
    }

    > .col-start-12 {
      --grid-col-start: 12;
    }

    > [class^="col-end-"],
    > [class*=" col-end-"] {
      grid-column-end: calc(min(var(--grid-cols), var(--grid-col-end, 1)) + 1);
    }

    > .col-end-1 {
      --grid-col-end: 1;
    }

    > .col-end-2 {
      --grid-col-end: 2;
    }

    > .col-end-3 {
      --grid-col-end: 3;
    }

    > .col-end-4 {
      --grid-col-end: 4;
    }

    > .col-end-5 {
      --grid-col-end: 5;
    }

    > .col-end-6 {
      --grid-col-end: 6;
    }

    > .col-end-7 {
      --grid-col-end: 7;
    }

    > .col-end-8 {
      --grid-col-end: 8;
    }

    > .col-end-9 {
      --grid-col-end: 9;
    }

    > .col-end-10 {
      --grid-col-end: 10;
    }

    > .col-end-11 {
      --grid-col-end: 11;
    }

    > .col-end-12 {
      --grid-col-end: 12;
    }
  }
}
